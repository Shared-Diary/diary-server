// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  binaryTargets   = ["native", "linux-musl"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
    id                          Int                         @default(autoincrement()) @id
    createdAt                   DateTime                    @default(now())
    updatedAt                   DateTime                    @updatedAt
    status                      Boolean                     @default(true)
    email                       String                      @unique
    password                    String

    diary                       Diary[]
    diaryLike                   DiaryLike[]
    userProfile                 UserProfile?
}

model UserProfile {
    id                          Int                         @default(autoincrement()) @id
    createdAt                   DateTime                    @default(now())
    updatedAt                   DateTime                    @updatedAt
    userId                      Int                         @unique
    profileUrl                  String?
    nickName                    String
    introduce                   String

    user                        User                        @relation(fields: [userId], references: [id], onDelete: Restrict)
}

model Diary {
    id                          Int                         @default(autoincrement()) @id
    createdAt                   DateTime                    @default(now())
    updatedAt                   DateTime                    @updatedAt
    status                      Boolean                     @default(true)
    userId                      Int
    title                       String
    content                     String
    isOpen                      Boolean

    user                        User                       @relation(fields: [userId], references: [id], onDelete: Restrict)
    diaryImage                  DiaryImage[]
    diaryLike                   DiaryLike[]
}

model DiaryImage {
    id                          Int                         @default(autoincrement()) @id
    createdAt                   DateTime                    @default(now())
    updatedAt                   DateTime                    @updatedAt
    diaryId                     Int
    imageUrl                    String

    diary                       Diary                       @relation(fields: [diaryId], references: [id], onDelete: Restrict)
}

model DiaryLike {
    id                          Int                         @default(autoincrement()) @id
    createdAt                   DateTime                    @default(now())
    status                      Boolean                     @default(true)
    userId                      Int
    diaryId                     Int

    @@unique([userId, diaryId])

    user                        User                       @relation(fields: [userId], references: [id], onDelete: Restrict)
    diary                       Diary                      @relation(fields: [diaryId], references: [id], onDelete: Restrict)
}
