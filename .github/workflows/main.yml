name: prod

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

#      - name: Cache node modules
#        uses: actions/cache@v2
#        id: cache
#        with:
#          path: node_modules
#          key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
#        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      - name: create env file
        working-directory: ./environments
        run: |
          touch .prod.env
          cat << EOF >> .prod.env
          ${{ secrets.ENV }}
          EOF

      - name: zip application
        run: tar -cpvzf ./diary-server.tar.gz *
        shell: bash

      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: upload to S3
        run: aws s3 cp --region ap-northeast-2 ./diary-server.tar.gz s3://diary-server/public/

      - name: deploy with AWS codeDeploy
        run: aws deploy create-deployment
          --application-name diary-server-deploy
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name diary-server-group
          --s3-location bucket=diary-server,bundleType=tgz,key=public/diary-server.tar.gz
